<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2024-09-15" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2024-10-28" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2024-10-28" />
<meta name="version" content="1" />
<meta name="sectionTitle" content="../../title.svg" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
<link rel="stylesheet" href="/inc/web-cat/page-structure/demo-page-1.css" />
<script type="module" src="/inc/web-cat/page-structure/demo-page-1.js" ></script>

<style>
#messages > p { margin-top : 0 ; margin-bottom : 0 }
</style>
 
<meta name="categories" content="JavaScript > Asynchronous Programming > Promises" />
<meta name="tags" content="JavaScript, Promise" />
<title>Promise Demo 1 (JavaScript > Asynchronous Programming > Promises)</title>
<meta name="description" content="Demonstrates how to promisify setTimeout()." />

</head><body>

<div class="hide-if-hosted"><h1>Demo 4</h1>
<p class="subtitle">Promisifying setTimeout()</p>
</div>

<p><input id="delayValue" type="number" value="500" step="50" style="width:70px"/> <button id="delayButton">Delay</button> <button id="clearButton">Clear</button></p>

<div id="messages"></div>

<script class="module">
function addMessage( msg ) { 
	const p = document.createElement( "P" );
	p.innerText = new Date().toLocaleTimeString( "de" ) + " " + msg;
	messages.append( p );
	}

clearButton.addEventListener( "click", ( ) => {
	messages.innerText = "" ;
	} ) ;

function wait( duration, id ) {
	return new Promise (( resolve, reject ) => {
		setTimeout( ( ) => {
			if ( duration > 2000 ) reject ( `Wait ${ id }: Delay limit exceeded by ${ Math.round( duration - 2000 ) } milliseconds.` );
			else resolve( `Wait ${ id }: Delay of ${ duration } milliseconds elapsed successfully.` ) ;
			} , duration ) ;
		} ) ;
	}

let count = 0;
delayButton.addEventListener( "click" , ( ) => {
	const value = parseInt( delayValue.value );
	count += 1;
	const promise = wait( value, count );
	promise.then( msg => addMessage( msg ));
	promise.catch( msg => addMessage( msg ));
	} ) ;
</script>
</body></html>