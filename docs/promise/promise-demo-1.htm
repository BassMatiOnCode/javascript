<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
 
<title>Promise Demo 5</title>

</head><body style="margin-left:20px">

<p><button id="start">start</button> <button id="clear">Clear</button></p>
<div id="messages" style="border:1px solid silver;height:200px;overflow:auto"></div>

<script type="module">
const msgbox = document.getElementById( "messages" );
function pad( n, len ) { return n.toString().padStart( len, "0" ) }
function message( s ) {
	const d = new Date( );
	msgbox.innerHTML += `${ pad( d.getMinutes(), 2) }:${ pad( d.getSeconds(), 2) }.${ pad( d.getMilliseconds(), 3) }&emsp;\t${ s }<br/>` ;
	msgbox.scrollTo( 0, 999 );
	}

document.getElementById("clear").addEventListener( "click", ( ) => msgbox.innerText = "" );

function load( url ) {
	return new Promise( (resolve, reject) => {
		const xhr = new XMLHttpRequest( );
		xhr.addEventListener( "load", (result) => {
			if ( xhr.status === 200 ) resolve ( xhr.responseText );
			else reject( `${ xhr.status } - ${ xhr.statusText }` );
			} ) ;
		xhr.addEventListener( "error", (error) => {
			reject ( error );
			} ) ;
		xhr.open( "GET", url );
		try { xhr.send( ); }
		catch { }
		} ) ;
	}

document.getElementById("start").addEventListener( "click", ( ) => {
	load( "rsrc-1.txt" )
		.then( response => {
			message( response );
			return load( "rsrc-2.txt" );
			} )
		.then( response => {
			message( response );
			return load( "rsrc-3.txt" );
			} )
		.then( response => {
			message( response );
			message( "Sequence completed successfully." );
			} )
		.catch( error => {
			message( "Error: " + error );
			return "Sequence completed with error(s)" ;
			} )
		.finally( ( ) => {
			message( "Processing completed." );
			} ) ;
	} ) ;


</script>

</body></html>